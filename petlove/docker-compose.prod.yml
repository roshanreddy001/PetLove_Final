version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: petlove-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: petlove
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - petlove-network
    # Don't expose MongoDB port in production for security
    # ports:
    #   - "27017:27017"

  # PetLove Application (Frontend + Backend)
  petlove-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petlove-app-prod
    restart: unless-stopped
    environment:
      - PORT=8000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/petlove?authSource=admin
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    ports:
      - "${APP_PORT:-80}:8000"
    depends_on:
      - mongodb
    networks:
      - petlove-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional - for SSL and load balancing)
  nginx:
    image: nginx:alpine
    container_name: petlove-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - petlove-app
    networks:
      - petlove-network

volumes:
  mongodb_data:
    driver: local

networks:
  petlove-network:
    driver: bridge
